{"version":3,"sources":["src/index.ts"],"names":[],"mappings":"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","file":"src.962d7182.js","sourceRoot":"..","sourcesContent":["const conainer: HTMLElement | any = document.querySelector(\"#app\");\nconst pokemons: number = 20;\n\ninterface IPokemon {\n  id: number;\n  name: string;\n  image: string;\n  type: string;\n}\n\nconst showPokemon = (pokemon: IPokemon): void => {\n  let html: string = `\n    <div class=\"card\">\n      <span class=\"card--id\">#${pokemon.id}</span>\n      <img class=\"card--image\" src=${pokemon.image} alt=${pokemon.name} />\n      <h1 class=\"card--name\">${pokemon.name}</h1>\n      <span class=\"card--details\">${pokemon.type}</span>\n    </div>\n  `;\n  conainer.innerHTML += html;\n};\nconst getPokemons = async (id: number): Promise<void> => {\n  try {\n    const data: Response = await fetch(\n      `https://pokeapi.co/api/v2/pokemon/${id}`\n    );\n    const pokemon: any = await data.json();\n    const pokemonType: string = pokemon.types\n      .map((poke: any) => poke.type.name)\n      .join(\", \");\n\n    const transformedPokemon = {\n      id: pokemon.id,\n      name: pokemon.name,\n      image: `${pokemon.sprites.front_default}`,\n      type: pokemonType\n    };\n    showPokemon(transformedPokemon);\n  } catch (error) {\n    conainer.innerHTML = \"Loading...\";\n    console.log(error);\n  }\n};\n\nconst fetchData = (): void => {\n  for (let i = 1; i <= pokemons; i++) {\n    getPokemons(i);\n  }\n};\n\nfetchData();\n"]}